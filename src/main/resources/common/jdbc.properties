# Mysql Database Setting
# 数据库驱动
jdbc.driver = com.mysql.jdbc.Driver
# 数据库路径
jdbc.url = jdbc:mysql://127.0.0.1:3306/fooddb?useUnicode=true&characterEncoding=utf-8&useSSL=false
# 数据库用户名
jdbc.username = root
# 数据库密码
jdbc.password = root
# 请求超时时间
jdbc.checkoutTimeout = 30000
# 连接池中保留的最小连接数
jdbc.minPoolSize = 5
# 连接池中保留的最大连接数(默认：15)
jdbc.maxPoolSize = 30
# 初始化时获取的连接数,取值应在minPoolSize与maxPoolSize之间(默认：3)
jdbc.initialPoolSize = 10
# 最大空闲时间,60秒内未使用则连接被丢弃;若为0则永不丢弃(默认：0)
jdbc.maxIdleTime = 60
# 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数(默认：3)
jdbc.acquireIncrement = 5
# JDBC的标准参数,用以控制数据源内加载的PreparedStatements数量;但由于预缓存的statements属于单个connection而不是整个连接池;所以设置这个参数需要考虑到多方面的因素;如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭(默认：0)
jdbc.maxStatements = 0
# 检查所有连接池中空闲连接的间隔时间(默认：0)
jdbc.idleConnectionTestPeriod = 60
# 定义在从数据库获取新连接失败后重复尝试的次数(默认：30)
jdbc.acquireRetryAttempts = 3
# 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常;但是数据源仍有效保留,并在下次调用getConnection()的时候继续尝试获取连接;如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。(默认：false)
jdbc.breakAfterAcquireFailure = true
# 因性能消耗大请只在需要的时候使用它;如果设为true那么在每个connection提交的时候都将校验其有效性;建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。(默认：false)
jdbc.testConnectionOnCheckout = false